#!/bin/sh
#
# Start the network....
#
SERVICE='mocad'

case "$1" in
  start)
	echo "Starting network..."
	# create a default resolv.conf in case DHCP doesn't provide one
	# (this is always true if using nfsroot).
	# 8.8.8.8 and 8.8.4.4 are well-known Google public DNS servers
	# that can be used from anywhere, so it makes a good place to start.
	# DHCP will just overwrite this file when it's ready to go.
	if [ ! -r /etc/resolv.conf ]; then
		#TODO(apenwarr): add IPv6 DNS once our uClibc can handle it.
		(echo 'nameserver 8.8.8.8';
		 echo 'nameserver 8.8.4.4') >/etc/resolv.conf
	fi

	# configure loopback
	/sbin/ifup lo
	if [ ! -e /tmp/NFS ]; then
		echo -n "Creating bridge... "
		brctl addbr br0 || exit 1
		brctl setfd br0 1 || exit 1
		brctl stp br0 on || exit 1
		[ -e /sys/class/net/eth0/address ] && \
			ip link set br0 address \
			$(cat /sys/class/net/eth0/address)
		echo "done"

		echo "Adding interfaces... "
		# set up networking if we are not on an NFS rootfs
		for x in $(ls /sys/class/net); do
			# Avoid bouncing bridge interface.
			if [ -n /sys/class/net/$x/bridge ]; then
				ifdown $x
				echo "Configuring $x interface"
				ifup $x
			fi
			if [ -e /sys/class/net/$x/device ]; then
				brctl addif br0 $x
			fi
		done
		sleep 1
		echo -n "Bringing up the bridge... "
		ifup br0
		echo "done"
	fi

	# Set up MoCA link -
	# 1) Kill mocad and mocactl
	# 2) Issue "mocacfg boot"
	if [ -e /dev/bmoca0 ]; then
		echo -n "mocacfg kill"
		mocacfg kill
		echo "done"
		echo "distribute IRQ handling between cores"
		# IRQ 62 (Serial port) & 31 (MoCA) on CPU 1.
		echo 1 > /proc/irq/62/smp_affinity
		echo 1 > /proc/irq/31/smp_affinity
		# Ethernet interrupts (18-21) on CPU 2.
		echo 2 > /proc/irq/18/smp_affinity
		echo 2 > /proc/irq/19/smp_affinity
		echo 2 > /proc/irq/20/smp_affinity
		echo 2 > /proc/irq/21/smp_affinity
		echo "done"
		echo -n "mocacfg boot "
		mocacfg boot
		echo "done"
	fi

	;;
  stop)
	echo -n "Stopping network..."
	if [ ! -e /tmp/NFS ]; then
		for x in $(ls /sys/class/net); do
			if [ -n /sys/class/net/$x/bridge ]; then
				ifdown $x
				echo "Shutting down $x interface"
			fi
			if [ -e /sys/class/net/$x/device ]; then
				brctl delif br0 $x
			fi
		done
		ifdown br0
		# Kill mocad and mocactl
		if [ -e /dev/bmoca0 ]; then
			echo -n "mocacfg kill"
			mocacfg kill
			echo "done"
		fi
	fi
	if ip link show dev br0 2>&1 > /dev/null; then
		brctl delbr br0
	fi
	;;
  restart|reload)
	"$0" stop
	"$0" start
	;;
  *)
	echo $"Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?
