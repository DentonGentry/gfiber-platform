* QOS

  This is the setup for building rules for sufficient QOS in Bruno.

Heavily influenced from diagram at [[http://l7-filter.sourceforge.net/PacketFlow.png][L7 Filters]] for understanding the
packet flow through iptables, ebtables, tc

** Initial stanza
#+BEGIN_SRC sh :shebang #!/bin/sh

set -e
set -x

# File for QOS rules

#+END_SRC

** Interfaces
#+BEGIN_SRC sh
  GIGE=eth0
  MOCA=eth1
  WIFI=eth2
  ALL_POSSIBLE_IFS="$GIGE $MOCA $WIFI"

  set +e # ignore bad ifconfig, we're checking it
  for if in $ALL_POSSIBLE_IFS; do
    ifconfig $if 2>&1 > /dev/null
    if [ $? == 0 ]; then
      ALL_IFS="$ALL_IFS $if"
    fi
  done
  set -e # back to error checking

#+END_SRC

** Clear all prior tables

#+BEGIN_SRC sh
  iptables -F
  ebtables -F

  iptables -t mangle -F
  ebtables -t nat -F
#+END_SRC


# tr69 traffic
** VLANs
#+BEGIN_SRC sh
VLAN_GOOG=3
VLAN_GUEST=4
VLAN_MEDIA=100
VLAN_DATA=0
VLANS="$VLAN_GOOG $VLAN_GUEST $VLAN_MEDIA"
#+END_SRC

** VLAN Definition

| Description      | WAN VID              | LAN VID | MoCA VID | Wifi VID               | Notes       |
|------------------+----------------------+---------+----------+------------------------+-------------|
| Data             | untag                |   untag |    untag | untag,Owner SSID       | [fn:data1]  |
| GoogleGuest Wifi | 3                    |       3 |        3 | untag,GoogleGuest SSID | [fn:gg1]    |
| OwnerGuest Wifi  | None, uses Data VLAN |       4 |        4 | untag,OnwerGuest SSID  | [fn:og1]    |
| Media            | None, uses Data VLAN |     100 |      100 | N/A                    | [fn:media1] |


[fn:gg1] ONT encapsulates LAN packets on this VLAN inside a VPN tunnel.

[fn:og1] This VLAN is only provisioned in the managed devices if the
customer enables a Wifi Guest function. It is isolated from the
Ethernet ports and from the Homeowner's SSID. OwnerGuest users can
only communicate with other OwnerGuest users and the uplink.

[fn:media1] VLAN for Bruno and other media-capable devices to use for media
delivery.

[fn:data1] The Bruno tr-69 agent listens on the Media VLAN.

** setup vlans

We also setup the bridges between all the interfaces on that VLAN

#+BEGIN_SRC sh
  VLAN_IFS=""
  for vlan in $VLANS; do
    brctl addbr br$vlan
    for rawif in $ALL_IFS; do
    set +e
    ip link delete dev $rawif.$vlan
    set -e
    ip link add link $rawif name $rawif.$vlan type vlan id $vlan;
    brctl addif br$vlan $rawif.$vlan
    VLAN_IFS="$VLAN_IFS $rawif.$vlan"
    done
  done
#+END_SRC

** Ingress

** Content

*** interface-based filtering
**** Untagged traffic gets lowest mark
#+BEGIN_SRC sh
ebtables -t nat -A PREROUTING -i $WIFI --mark-set 8
ebtables -t nat -A PREROUTING -i $GIGE --mark-set 8
ebtables -t nat -A PREROUTING -i $MOCA --mark-set 8
#+END_SRC
***** except guest VLAN on wifi

Unsure which of these to use...
#+BEGIN_SRC sh
ebtables -t nat -A PREROUTING -i $WIFI.$VLAN_GUEST --mark-set 7

# ebtables -t nat -A PREROUTING --vlan-id $VLAN_GUEST --mark-set 7

#+END_SRC

*** content-based filtering
**** video user

***** TODO just tags all video traffic as CS5, needs port information to mark control messages as CS7
#+BEGIN_SRC sh
iptables -t mangle -A OUTPUT -m owner --uid-owner video -j DSCP --set-dscp-class CS5
iptables -t mangle -A OUTPUT -m owner --uid-owner video -j MARK --set-mark 3
#+END_SRC

## CONTENT END

** Egress
*** qdisc setup
    marks are numbered by classes, start at 1, map to priority (mark-1)
**** TODO update priomap
#+BEGIN_SRC sh
  for if in $VLAN_IFS; do
    tc qdisc add dev $if root handle 1: prio bands 8
    for id in $(seq 1 8); do
      mark=$id
      handle=$id
      tc filter add dev $if parent 1:0 protocol ip prio $(expr $id - 1) handle $mark fw classid 1:$handle
    done
  done
#+END_SRC
*** egress mark based on dscp

# <<DSCP Table>>

| Applications                                              | DSCP    | 802.1p | MoCA   | PON    | MARK |
|-----------------------------------------------------------+---------+--------+--------+--------+------|
| Linear TV control messages, Inter-System Control Messages | cs7     |      7 | High   | N/A    | 1    |
| Telephony, Telepresence (audio),                          | cs6     |      6 | High   | Type 1 | 2    |
| Telepresence (video), Linear TV                           | cs5     |      5 | Medium | Type 1 | 3    |
|                                                           | cs4     |      4 | Medium |        | 4    |
|                                                           | cs3     |      3 | Medium |        | 5    |
| TR-069                                                    | cs2     |      2 | Low    | Type 2 | 6    |
| Guest Wifi                                                | cs1     |      1 | Low    |        | 7    |
| Internet, P2P                                             | default |      0 | Low    | Type 4 | 8    |

#+BEGIN_SRC sh
for mark in $(seq 1 7); do
  CS=$(expr 8 - $mark)
  iptables -t mangle -A POSTROUTING -m dscp --dscp-class CS$CS -j MARK --set-mark $mark
  iptables -t mangle -A POSTROUTING -m dscp --dscp-class CS$CS -j RETURN
done
iptables -t mangle -A POSTROUTING -j MARK --set-mark 8
iptables -t mangle -A POSTROUTING -j RETURN
#+END_SRC
*** egress mark based on 8021p for our tagged vlans
#+BEGIN_SRC sh
  for vlan in $VLANS; do
    for mark in $(seq 1 7); do
      VLAN_PRIO=$(expr 8 - $mark)
      # nat/PREREOUTING is earliest in ebtables path
      ebtables -t nat -A POSTROUTING -p 802_1Q --vlan-id $vlan --vlan-prio $VLAN_PRIO -j mark --set-mark $mark --mark-target CONTINUE
    done
  done
#+END_SRC


#+property: tangle yes
